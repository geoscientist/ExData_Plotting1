filter(cran, !is.na(r_version))
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
rrange(cran2, package, ip_id)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
install_from_swirl("Exploratory_Data_Analysis")
swirl()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarise(cran, mean(size))
summarise(by_package, mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(cran, count > 679)
top_counts <- filter(cran, "count" > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
# operator.
chain1
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, value)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
students3
?gather
submit()
?spread
View(students3)
View(students3)
submit()
submit()
submit()
View(students3)
?spread
submit()
submit()
View(res)
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
View(students3)
submit()
extract_numeric(students3$class)
extract_numeric(students3$class[1])
students3$class
names(students3)
extract_numeric("class5")
View(students3)
students3$class5
extract_numeric(students3$test)
submit()
submit()
submit()
swirl()
library(swirl)
swirl()
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
students4
submit()
submit()
?unique
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
packageVersion('dplyr')
bind_rows(passed, failed)
sat
submit()
submit()
?group_by
?group_by
submit()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "./R_repo/1.csv", "curl")
d <- read.csv("./R_repo/1.csv")
head(d)
str(d)
library("dplyr")
d <- tbl_df("./R_repo/1.csv")
d <- tbl_df(d)
summarise(d)
d
head(d$AGS)
unique(d$AGS)
unique(d$AGS)
unique(d$ACR)
agriculturalLogical <- filter(AGS=5, ACR=3)
agriculturalLogical <- filter(d, AGS=5, ACR=3)
agriculturalLogical <- filter(d, AGS==5, ACR==3)
which(agriculturalLogical)
agriculturalLogical
agricultureLogical <- d[(AGR == 6 & ACR == 3)]
agricultureLogical <- d[(d$AGR == 6 & d$ACR == 3)]
which(agricultureLogical)
?which
agricultureLogical
agricultureLogical[1:3]
agricultureLogical <- d[(d$AGR == 6 & d$ACR == 3), ]
load("~/R_repo/data/getdata.RData")
write.table(t_data, "tidy_data2.txt", row.names = FALSE)
View(t_data)
load("~/R_repo/Agro.RData")
library('RPostgreSQL')
install.packages("RPostgreSQL")
str(dem_data)
str(dem_data$twi_avg)
summary(dem_data$twi_avg)
qplot(dem_data$twi_avg)
library(ggplot2)
library('ggplot2')
install.packages("ggplot2")
library('ggplot2')
qplot(dem_data$twi_avg)
?qplot
??ggplot2
qplot(dem_data$twi_avg, landsat_ndwi$"2014-04-18")
qplot(dem_data$twi_avg, landsat_ndwi)
View(dem_data)
View(landsat_ndwi)
da <- merge(dem_data, landsat_ndwi, by = field_id)
da <- merge(dem_data, landsat_ndwi, by.x = field_id, by.y = field_id)
da <- merge(dem_data, landsat_ndwi, by.x = dem_data$field_id , by.y = landsat_ndwi$field_id)
View(landsat_ndwi)
da <- join(dem_data, landsat_ndwi, by = field_id)
library(dplyr)
library('dplyr')
library('tidyr')
install.packages('tidyr')
library(dplyr)
class(dem_data)
da <- join(dem_data, landsat_ndwi, by = field_id)
?join
?str
da <- merge(dem_data, landsat_ndwi, by.x = dem_data$field_id , by.y = landsat_ndwi$field_id)
library(dplyr)
class(dem_data)
dem_data <- tbl_df(dem_data)
class(dem_data)
landsat_ndwi <- tbl_df(landsat_ndwi)
da <- merge(dem_data, landsat_ndwi, by.x = dem_data$field_id , by.y = landsat_ndwi$field_id)
da <- merge(dem_data, landsat_ndwi, by.x = field_id , by.y = field_id)
?merge
da <- merge(dem_data, landsat_ndwi, by.x = field_id , by.y = field_id, all = F)
da <- merge(dem_data, landsat_ndwi, by.x = dem_data$field_id , by.y = landsat_ndwi$field_id, all = F)
da <- merge(dem_data, landsat_ndwi, by = field_id)
da <- merge(dem_data, landsat_ndwi, by = "field_id")
qplot(da$twi_avg, da$"2014-06-03")
library(ggplot2)
qplot(da$twi_avg, da$"2014-06-03")
setwd("/home/aleksey/R_repo/ExData_Plotting1/")
data <- read.table(file = "/home/aleksey/power_consumtion/household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE)
head(data)
as.Date(data$Time[1], "%H:%M:%S")
as.Date(data$Time[1])
data$Time[1]
strptime(data$Time[1], format = "%H:%M:%S")
strptime(data$Date[1], format = "%d/%m/%Y"")
View(data)
library(lubridate)
install.packages("lubridate")
library(lubridate)
hms(data$Time[1])
t <- hms(data$Time[1])
class(t)
rm(t)
t <- strptime(data$Time[1], format = "%H:%M:%S")
class(t)
as.Time(data$Time[1], format = "%H:%M:%S")
t <- as.Date(data$Date[1], "%d/%m/%Y")
class(t)
t <- strptime(data$Time[1], format = "%T")
t
t <- strptime(data$Time[1], format = "%T", tz = "")
t
t <- strptime(c(data$Date[1], data$Time[1]), format = "%T", tz = "")
t
t <- strptime(paste(data$Date[1], data$Time[1]), format = "%T", tz = "")
t
rm(t)
t <- strptime(data$Time[1], format = "%T", usetz = FALSE)
t <- strftime(data$Time[1], format = "%T", usetz = FALSE)
t <- strftime(atrptime(data$Time[1], format = "%T"), usetz = FALSE)
t <- strftime(strptime(data$Time[1], format = "%T"), usetz = FALSE)
t
class(t)
?as.Date
?strptime
paste(data$Date[1], " ", data$Time[1])
t<- paste(data$Date[1], data$Time[1])
t
as.Date(t, "%d/%m/%Y %H:%M:%S")
strptime(t, "%d/%m/%Y %H:%M:%S")
data$Time <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
View(data)
data$Global_active_power <- as.numeric(data$Global_active_power)
data$Global_reactive_power <- as.numeric(data$Global_reactive_power)
data$Voltage <- as.numeric(data$Voltage)
data$Global_intensity <- as.numeric(data$Global_intensity)
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
datas <- subset(data, data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"))
rm(datas)
data$Date <- as.Date(data$Date, "%d/%m/%Y")
datas <- subset(data, data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"))
View(datas)
png(filename = "/home/aleksey/R_repo/ExData_Plotting1/plot1.png",
width = 480, height = 480, units = 'px')
hist(data_subset$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red", main = "Global Active Power")
hist(datas$Global_active_power, xlab = "Global Active Power (kilowatts)", col = "red", main = "Global Active Power")
dev.off()
lines(datas$Global_active_power, datas$Time)
plot()
plot(lines(datas$Global_active_power, datas$Time))
plot(datas$Global_active_power, datas$Time, type = "n")
lines(datas$Global_active_power, datas$Time)
plot(datas$Time, datas$Global_active_power, xlab = weekdays(datas$Time), ylab = "Global Active Power (kilowatts)", type = "n")
plot(datas$Time, datas$Global_active_power, ylab = "Global Active Power (kilowatts)", type = "n")
lines(datas$Global_active_power, datas$Time)
lines(datas$Time, datas$Global_active_power)
png(filename = "/home/aleksey/R_repo/ExData_Plotting1/plot2.png", width = 480, height = 480, units = 'px')
plot(datas$Time, datas$Global_active_power, ylab = "Global Active Power (kilowatts)", type = "n")
dev.off()
png(filename = "/home/aleksey/R_repo/ExData_Plotting1/plot2.png", width = 480, height = 480, units = 'px')
plot(datas$Time, datas$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
lines(datas$Time, datas$Global_active_power)
dev.off()
data_subset <- datas
rm(datas)
png(filename = "/home/aleksey/R_repo/ExData_Plotting1/plot3.png",
width = 480, height = 480, units = 'px')
plot(data_subset$Time, data_subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "n")
line(data_subset$Time, data_subset$Sub_metering_1)
lines(data_subset$Time, data_subset$Sub_metering_1)
lines(data_subset$Time, data_subset$Sub_metering_2, col = "red")
lines(data_subset$Time, data_subset$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, col = c("black", "red", "blue), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, col = c("black", "red", "blue))
dev.off()
png(filename = "/home/aleksey/R_repo/ExData_Plotting1/plot3.png",
width = 480, height = 480, units = 'px')
plot(data_subset$Time, data_subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "n")
lines(data_subset$Time, data_subset$Sub_metering_1)
lines(data_subset$Time, data_subset$Sub_metering_2, col = "red")
lines(data_subset$Time, data_subset$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
par(mfcol = c(2,2))
plot(data_subset$Time, data_subset$Global_active_power, xlab = ""
ylab = "Global Active Power (kilowatts)", type = "n")
lines(data_subset$Time, data_subset$Global_active_power)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(1,1,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
lines(data_subset$Time, data_subset$Global_active_power)
plot(data_subset$Time, data_subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "n")
par(mar = c(2,2,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(3,3,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(4,4,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(3,4,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
lines(data_subset$Time, data_subset$Global_active_power)
plot(data_subset$Time, data_subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "n")
lines(data_subset$Time, data_subset$Sub_metering_1)
lines(data_subset$Time, data_subset$Sub_metering_2, col = "red")
lines(data_subset$Time, data_subset$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(oma = c(1,1,1,1))
lot(data_subset$Time, data_subset$Global_active_power, xlab = "",
ylab = "Global Active Power (kilowatts)", type = "n")
lines(data_subset$Time, data_subset$Global_active_power)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "",
ylab = "Global Active Power (kilowatts)", type = "n")
lines(data_subset$Time, data_subset$Global_active_power)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "",
ylab = "Global Active Power (kilowatts)", type = "n")
?plot
par(mar = c(4,4,1,1))
par(font = 3)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(font = 1)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(4,4,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(font.axis = 1)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(4,4,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n", font = 1)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n", font.axes = 3)
par(mar = c(3,3,1,1), font = 1, font.axes = 1)
warnings()
par(mar = c(3,3,1,1), font = 1, font.axis = 1, font.lab = 1)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n", font.axes = 3)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n", font.axis = 3)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n", font.axis = 5)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n", font.axis = 0)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n", font.axis = 10)
par(mar = c(3,3,1,1), font = 2, font.axis = 2, font.lab = 2)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(3,3,1,1), font = 0.5, font.axis = 0.5, font.lab = 0.5)
par(mar = c(3,3,1,1), font = 5, font.axis = 5, font.lab = 5)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(3,3,1,1), font = 1)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(3,3,1,1), font = 1, font.axis = 1, font.lab = 1)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mai = c(1,1,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mai = c(4,4,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mai = c(2,2,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mai = c(0.5,0.5,1,1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mai = c(0.1,0.1,0.1,0.1))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mai = c(0.2,0.2,0.2,0.2))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(cex = 0.5)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(cex = 0.7)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mai = c(0.4,0.4,0.4,0.4))
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mai = c(0.4,0.4,0.4,0.4), cex = 0.6)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(3,3,1,1), mai = c(0.4,0.4,0.4,0.4), cex = 0.6)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(3,3,1,1), mai = c(1,1,0.4,0.4), cex = 0.6)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(3,3,1,1), mai = c(0.6,0.6,0.4,0.4), cex = 0.6)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
par(mar = c(3,3,1,1), mai = c(0.5,0.5,0.4,0.4), cex = 0.5)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "sadad", ylab = "Global Active Power (kilowatts)", type = "n")
plot(data_subset$Time, data_subset$Global_active_power, xlab = "sadad", ylab = "Global Active Power (kilowatts)", type = "n")
lines(data_subset$Time, data_subset$Sub_metering_1)
lines(data_subset$Time, data_subset$Sub_metering_2, col = "red")
lines(data_subset$Time, data_subset$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mar = c(3,3,1,1), mai = c(0.5,0.5,0.4,0.4), cex = 0.5)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "",
ylab = "Global Active Power (kilowatts)", type = "n")
lines(data_subset$Time, data_subset$Global_active_power)
plot(data_subset$Time, data_subset$Sub_metering_1, xlab = "",
ylab = "Energy sub metering", type = "n")
lines(data_subset$Time, data_subset$Sub_metering_1)
lines(data_subset$Time, data_subset$Sub_metering_2, col = "red")
lines(data_subset$Time, data_subset$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data_subset$Time, data_subset$Voltage, xlab = "datetime", ylab = "Voltage", type = "n")
lines(data_subset$Time, data_subset$Voltage)
plot(data_subset$Time, data_subset$Global_reactive_power, xlab = "datetime", ylab = "Global_reactive_power", type = "n")
lines(data_subset$Time, data_subset$Global_reactive_power)
plot(data_subset$Time, data_subset$Sub_metering_1, xlab = "",
ylab = "Energy sub metering", type = "n")
lines(data_subset$Time, data_subset$Sub_metering_1)
lines(data_subset$Time, data_subset$Sub_metering_2, col = "red")
lines(data_subset$Time, data_subset$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n")
png(filename = "/home/aleksey/R_repo/ExData_Plotting1/plot4.png",
width = 480, height = 480, units = 'px')
par(mfcol = c(2,2), mar = c(3,3,1,1), mai = c(0.5,0.5,0.4,0.4), cex = 0.5)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "",
ylab = "Global Active Power (kilowatts)", type = "n")
lines(data_subset$Time, data_subset$Global_active_power)
plot(data_subset$Time, data_subset$Sub_metering_1, xlab = "",
ylab = "Energy sub metering", type = "n")
lines(data_subset$Time, data_subset$Sub_metering_1)
lines(data_subset$Time, data_subset$Sub_metering_2, col = "red")
lines(data_subset$Time, data_subset$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n")
plot(data_subset$Time, data_subset$Voltage, xlab = "datetime", ylab = "Voltage",
type = "n")
lines(data_subset$Time, data_subset$Voltage)
plot(data_subset$Time, data_subset$Global_reactive_power, xlab = "datetime",
ylab = "Global_reactive_power", type = "n")
lines(data_subset$Time, data_subset$Global_reactive_power)
dev.off()
png(filename = "/home/aleksey/R_repo/ExData_Plotting1/plot4.png",
width = 480, height = 480, units = 'px')
par(mfcol = c(2,2), mar = c(3,3,1,1), mai = c(0.5,0.5,0.4,0.4), cex = 0.5)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "",
ylab = "Global Active Power (kilowatts)", type = "n")
lines(data_subset$Time, data_subset$Global_active_power)
plot(data_subset$Time, data_subset$Sub_metering_1, xlab = "",
ylab = "Energy sub metering", type = "n")
lines(data_subset$Time, data_subset$Sub_metering_1)
lines(data_subset$Time, data_subset$Sub_metering_2, col = "red")
lines(data_subset$Time, data_subset$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n")
plot(data_subset$Time, data_subset$Voltage, xlab = "datetime", ylab = "Voltage",
type = "n")
lines(data_subset$Time, data_subset$Voltage)
plot(data_subset$Time, data_subset$Global_reactive_power, xlab = "datetime",
ylab = "Global_reactive_power", type = "n")
lines(data_subset$Time, data_subset$Global_reactive_power)
dev.off()
png(filename = "/home/aleksey/R_repo/ExData_Plotting1/plot4.png",
width = 480, height = 480, units = 'px')
par(mfcol = c(2,2), mar = c(3,3,1,1), mai = c(0.5,0.5,0.4,0.4), cex = 0.6)
plot(data_subset$Time, data_subset$Global_active_power, xlab = "",
ylab = "Global Active Power (kilowatts)", type = "n")
lines(data_subset$Time, data_subset$Global_active_power)
plot(data_subset$Time, data_subset$Sub_metering_1, xlab = "",
ylab = "Energy sub metering", type = "n")
lines(data_subset$Time, data_subset$Sub_metering_1)
lines(data_subset$Time, data_subset$Sub_metering_2, col = "red")
lines(data_subset$Time, data_subset$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n")
plot(data_subset$Time, data_subset$Voltage, xlab = "datetime", ylab = "Voltage",
type = "n")
lines(data_subset$Time, data_subset$Voltage)
plot(data_subset$Time, data_subset$Global_reactive_power, xlab = "datetime",
ylab = "Global_reactive_power", type = "n")
lines(data_subset$Time, data_subset$Global_reactive_power)
dev.off()
rm(data, data_subset)
